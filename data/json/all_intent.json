{
    "1": {
        "name": "将transmission添加到我的found_them_first歌单",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "found_them_first",
                    "music": "transmission"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.AddToPlaylist(playlist=\"found_them_first\", music=\"transmission\"))"
    },
    "2": {
        "name": "从现在起20分钟后，马丁尼克的家园草地会是什么天气",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "20*60"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherCurrentConditions",
                "params": {
                    "location": "马丁尼克的家园草地"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.Delay(numberOfSeconds=20*60),phone.actions.WeatherCurrentConditions(location=马丁尼克的家园草地))"
    },
    "3": {
        "name": "把老板罗斯的这首曲子放到nação reggae",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "nação reggae",
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.AddToPlaylist(playlist=\"nação reggae\", music=phone.actions.GetCurrentSong()))"
    },
    "4": {
        "name": "播放1989年左右的乔尼-巴克兰的交响曲前五名",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.FilterMusic",
                "params": {
                    "sortProperty": "演唱者",
                    "sortValue": "乔尼-巴克兰",
                    "sortOrder": "desc",
                    "limitedNumber": "5"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.PlayMusic(music=phone.actions.FilterMusic(sortProperty=演唱者, sortValue=乔尼-巴克兰, sortOrder=desc,limitedNumber=5)))"
    },
    "5": {
        "name": "把这首歌放在感觉良好的独立摇滚乐播放列表中",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "感觉良好的独立摇滚乐",
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.AddToPlaylist(playlist=感觉良好的独立摇滚乐, music=phone.actions.GetCurrentSong()))"
    },
    "6": {
        "name": "搜索哪里可以看到学习的乐趣",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "哪里可以看到学习的乐趣"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.SearchWeb(text=哪里可以看到学习的乐趣))"
    },
    "7": {
        "name": "搜索秘密教义的创意图片",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "秘密教义的创意图片"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.SearchWeb(text=秘密教义的创意图片))"
    },
    "8": {
        "name": "播放七十年代汤姆-萨克尔的民谣",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.FilterMusic",
                "params": {
                    "sortProperty": "发表时间",
                    "sortValue": "七十年代",
                    "singer": "汤姆-萨克尔"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.PlayMusic(music=phone.actions.FilterMusic(sortProperty=发表时间, sortValue=七十年代, singer=汤姆-萨克尔)))"
    },
    "9": {
        "name": "我想看忘了那个女孩",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "忘了那个女孩"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.SearchWeb(text=忘了那个女孩))"
    },
    "10": {
        "name": "播放jade puget的2gether",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "2gether"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.PlayMusic(music=2gether))"
    },
    "11": {
        "name": "将Rudolph Run加入我的Rockin播放列表",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "Rockin",
                    "music": "Rudolph Run"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.AddToPlaylist(playlist=Rockin,music=Rudolph Run))"
    },
    "12": {
        "name": "将 \"每首歌都是对爱的呼唤 \"添加到我的播放列表中，\"城市的灵魂\"",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "城市的灵魂",
                    "music": "每首歌都是对爱的呼唤"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.AddToPlaylist(playlist=城市的灵魂,music=每首歌都是对爱的呼唤))"
    },
    "13": {
        "name": "将该音乐添加到罗莎娜的健身运动播放列表",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "罗莎娜的健身运动",
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.AddToPlaylist(playlist=罗莎娜的健身运动, music=phone.actions.GetCurrentSong()))"
    },
    "14": {
        "name": "巴布亚新几内亚午间的降雨量预测",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "巴布亚新几内亚",
                    "type": "Hour"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "precipitation"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location=巴布亚新几内亚,type=Hour),info=precipitation))"
    },
    "15": {
        "name": "附近停车场",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.SearchLocalFacilities",
                "params": {
                    "source": "DefalutToCurrentLocation",
                    "query": "停车场",
                    "radius": "1000"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.SearchLocalFacilities(source=DefalutToCurrentLocation,query=停车场,radius=1000))"
    },
    "16": {
        "name": "去苏州大学",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "苏州大学",
                    "mode": "Driving"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDirections(source=DefaultToCurrentLocation,destination=苏州大学,mode=Driving))"
    },
    "17": {
        "name": "用最新的两张照片制作GIF发送给张三",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastPhoto",
                "params": {
                    "numberOfPhotos": "2"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.MakeGif",
                "params": {
                    "content": "ActionOutput:0"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.SendMessage",
                "params": {
                    "showWhenRun": "false",
                    "recipients": "张三",
                    "message": "ActionOutput:1"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SendMessage(showWhenRun=false,recipients=张三,message=phone.actions.MakeGif(content=phone.actions.GetLastPhoto(numberOfPhotos=2))))"
    },
    "18": {
        "name": "如果明天早上下雨的话帮我叫辆车去公司",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Hour"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.scenes.IsWeatherCondition",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": "下雨"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "DefaultToAPP",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropoffLocation": "公司",
                    "rideType": "commonRide",
                    "partySize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsWeatherCondition(input=phone.actions.WeatherForecast(location=DefaultToCurrentLocation,type=Hour),condition=下雨))       SeqCommand(phone.actions.RequestRide(app=DefaultToAPP,pickupLocation=DefaultToCurrentLocation,dropoffLocation=公司,rideType=commonRide,partySize=1))"
    },
    "19": {
        "name": "定5个闹钟，从8点开始每隔5分钟定一个闹钟",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "count": "5"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "300"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.CreateAlarm",
                "params": {
                    "time": "DefaultCurrentTime"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(count=5))\nSeqCommand(phone.actions.Delay(numberOfSeconds=300), phone.actions.CreateAlarm(time='DefaultCurrentTime'))"
    },
    "20": {
        "name": "获取当前设备名称",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDeviceDetails",
                "params": {
                    "detail": "DefaultToCurrentDevice"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDeviceDetails(detail=DefaultToCurrentDevice))"
    },
    "21": {
        "name": "计算从当前位置到苏州大学的距离",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "苏州大学",
                    "routeType": "Direct",
                    "unit": "Miles"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDistance(startLocation=DefaultToCurrentLocation,endLocation=苏州大学,routeType=Direct,unit=Miles))"
    },
    "22": {
        "name": "返回当前设备的信息",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDeviceDetails",
                "params": {
                    "detail": "DefaultToCurrentDevice"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDeviceDetails(detail=DefaultToCurrentDevice))"
    },
    "23": {
        "name": "告诉我到苏州大学的距离并打一辆车",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "苏州大学",
                    "routeType": "Direct",
                    "unit": "Miles"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "DefaultToApp",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropOffLocation": "苏州大学",
                    "rideType": "commonRide",
                    "partySize": "1"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDistance(startLocation='DefaultToCurrentLocation', endLocation=苏州大学, routeType='Direct', unit='Miles'), phone.actions.RequestRide(app='DefaultToApp', pickupLocation='DefaultToCurrentLocation', dropOffLocation=苏州大学, rideType='commonRide', partySize=1))"
    },
    "24": {
        "name": "当和车载蓝牙连接时播放我的开车音乐列表",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsBlueTooth",
                "params": {
                    "device": "车载蓝牙",
                    "blueToothState": "断开"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.GetPlaylist",
                "params": {
                    "playlist": "开车"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "ActionOutput:1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsBlueTooth(device='车载蓝牙', blueToothState='断开'))\nNestCommand(phone.actions.PlayMusic(music=phone.actions.GetPlaylist(playlist='开车')))"
    },
    "25": {
        "name": "把现在播放的这首歌添加到备忘录",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.AddToMemorandum",
                "params": {
                    "text": "ActionOutput:0",
                    "memora": "DefaultFirst"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.AddToMemorandum(text=phone.actions.GetCurrentSong(), memora=DefaultFirst))"
    },
    "26": {
        "name": "给A连续发10份欢迎邮件",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "10"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "A",
                    "message": "欢迎"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=10)\nSeqCommand(phone.actions.SendEmail(from=DefaultToCurrentSender,to=A,message=欢迎))"
    },
    "27": {
        "name": "求从昆明到苏州和昆明到深圳的距离",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "昆明",
                    "endLocation": "苏州",
                    "routeType": "Direct"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "昆明",
                    "endLocation": "深圳",
                    "routeType": "Direct"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDistance(startLocation=昆明,endLocation=苏州,routeType=Direct),phone.actions.GetDistance(startLocation=昆明,endLocation=深圳,routeType=Direct))"
    },
    "28": {
        "name": "如果明天早上下雨的话帮我给A发邮件请假",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "type": "Daily",
                    "location": "DefaultToCurrentLocation"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.scenes.IsWeatherCondition",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": "下雨"
                }
            },
            {
                "action_id": 2,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "type": "Daily",
                    "location": "DefaultToCurrentLocation"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "to": "A",
                    "message": "ActionOutput:2"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsWeatherCondition(input=phone.actions.WeatherForecast(type=Daily,location=DefaultToCurrentLocation),condition=下雨))\nSeqCommand(phone.actions.SendEmail(to=A,message=phone.actions.WeatherForecast(type=Daily,location=DefaultToCurrentLocation))"
    },
    "29": {
        "name": "导航去苏州，查询当地的天气，并循环播放音乐A",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "苏州",
                    "mode": "Driving"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "A",
                    "mode": "repeat"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.GetDirections(source=DefaultToCurrentLocation,destination=苏州,mode=Driving),phone.actions.WeatherForecast(location=DefaultToCurrentLocation,type=Daily),phone.actions.PlayMusic(music=A,mode=repeat))"
    },
    "30": {
        "name": "循环播放《星晴》10次",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "10"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "《星晴》"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=10))\nSeqCommand(phone.actions.PlayMusic(music=《星晴》))"
    },
    "31": {
        "name": "从呈贡区打车到西山区，6个人需要一辆高级车",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "DefaultToApp",
                    "pickupLocation": "呈贡区",
                    "dropOffLocation": "西山区",
                    "rideType": "highRide",
                    "partySize": "6"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.RequestRide(app=DefaultToApp,pickupLocation=呈贡区,dropOffLocation=西山区,rideType=highRide,partySize=6))"
    },
    "32": {
        "name": "获取苏州每小时到天气预报",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "苏州",
                    "type": "Hour"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.WeatherForecast(location=苏州,type=Hour))"
    },
    "33": {
        "name": "获取昆明呈贡区每日天气预报",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明呈贡区",
                    "type": "Daily"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.WeatherForecast(location=昆明呈贡区,type=Daily))"
    },
    "34": {
        "name": "获取昆明呈贡区每日天气预报并邮件通知A",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明呈贡区",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "A",
                    "message": "ActionOutput:0",
                    "subject": "昆明的每日天气通知"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SendEmail(from=DefaultToCurrentSender,to=A,message=phone.actions.WeatherForecast(location=昆明呈贡区,type=Daily),subject=昆明的每日天气通知))"
    },
    "35": {
        "name": "计算3+2等于几",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.CalculateExpression",
                "params": {
                    "input": "3+2"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.CalculateExpression(input=3+2))"
    },
    "36": {
        "name": "计算3+2+1等于几",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.CalculateExpression",
                "params": {
                    "input": "3+2+1"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.CalculateExpression(input=3+2+1))"
    },
    "37": {
        "name": "每隔10分钟,播放一次《星晴》,循环50次",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "50"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "600"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "《星晴》"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=50))\nSeqCommand(phone.actions.Delay(numberOfSeconds=600),phone.actions.PlayMusic(music=《星晴》))"
    },
    "38": {
        "name": "每隔60分钟,给A发送一次当前位置的每小时天气,循环99次",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "99"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "3600"
                }
            },
            {
                "action_id": 2,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Hour"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "A",
                    "subject": "每小时天气通知",
                    "message": "ActionOutput:2"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=99))\nSeqCommand(phone.actions.Delay(numberOfSeconds=3600),phone.actions.SendEmail(from=DefaultToCurrentSender,to=A,subject=每小时天气通知,message=phone.actions.WeatherForecast(location=DefaultToCurrentLocation,type=Hour)))"
    },
    "39": {
        "name": "获取昆明呈贡区每日天气的最高温度",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明呈贡区",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "List<CPWeather>",
                    "info": "highestTmp"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location=昆明呈贡区,type=Daily),info=highestTmp))"
    },
    "40": {
        "name": "获取昆明呈贡区每日天气的最低温度",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明呈贡区",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "List<CPWeather>",
                    "info": "lowestTmp"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location=昆明呈贡区,type=Daily),info=lowestTmp))"
    },
    "41": {
        "name": "获取昆明呈贡区每日天气的体感温度",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明呈贡区",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "List<CPWeather>",
                    "info": "bodyTmp"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location=昆明呈贡区,type=Daily),info=bodyTmp))"
    },
    "42": {
        "name": "查找联系人，用邮件给联系人发送文件夹",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.Contacts",
                "params": {
                    "folder": "DefaultLastOpen"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.Folder",
                "params": {
                    "folder": "DefaultLastOpen"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "ActionOutput:0",
                    "message": "ActionOutput:1",
                    "theme": "theme"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SendEmail(from=DefaultToCurrentSender,to=phone.actions.Contacts(input=name),message=phone.actions.Folder(folder='DefaultLastOpen'),theme='theme'))"
    },
    "43": {
        "name": "查找相册最近的5张gif图片，将其拆分为单独的帧",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastPhoto",
                "params": {
                    "numberofPhotos": "5",
                    "includeScreenshots": "false"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.GetFramesFromImage",
                "params": {
                    "image": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.GetFramesFromImage(image=phone.actions.GetLastPhoto(numberofPhotos=5,includeScreenshots=false)))"
    },
    "44": {
        "name": "把pdf创建成jpg图像并生成gif文件",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.MakeImageFromPdfPage",
                "params": {
                    "pdf": "LastOpenedFile",
                    "imageFormat": "jpg"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.MakeGif",
                "params": {
                    "secondsPerPhoto": "0.2",
                    "loopForever": "true",
                    "autoSize": "true",
                    "width": "600",
                    "content": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.MakeGif(secondsPerPhoto=0.2,loopForever=true,autoSize=true,width=600,content=phone.actions.MakeImageFromPdfPage(pdf=LastOpenedFile,imageFormat=jpg)))"
    },
    "45": {
        "name": "打开A应用并把窗口运动到屏幕中间",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "A"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.MoveWindow",
                "params": {
                    "position": "Center",
                    "window": "A",
                    "bringtoFront": "True"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.OpenApp(appName=A),phone.actions.MoveWindow(position=Center,window=A,bringtoFront=True))"
    },
    "46": {
        "name": "搜索中国的A播客,在音乐程序中创建一个新的播放列表，然后播放A的所有曲目",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.SearchPodcasts",
                "params": {
                    "search": "Search",
                    "searchBy": "A",
                    "country": "中国"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.CreatePlaylist",
                "params": {
                    "playlistName": "DefaultNewList",
                    "Music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.CreatePlaylist(playlistName=DefaultNewList,Music=phone.actions.SearchPodcasts(search=Search,searchBy=A,country=中国)))"
    },
    "47": {
        "name": "从相册获取最近的两张并将其合并",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastPhoto",
                "params": {
                    "numberofPhotos": "2",
                    "includeScreenshots": "true"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OverlayImages",
                "params": {
                    "images": "ActionOutput:0",
                    "opacity": "100"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.OverlayImages(images=phone.actions.GetLastPhoto(numberofPhotos=2,includeScreenshots=true),opacity=100))"
    },
    "48": {
        "name": "获取A播放列表中的每首歌曲,通过邮件把这些歌曲发给B",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetPlaylist",
                "params": {
                    "playlist": "A"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "B",
                    "subject": "song",
                    "message": "songInformation"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SendEmail(from=DefaultToCurrentSender,to=B,subject=song,message=phone.actions.GetPlaylist(playlist=A)))"
    },
    "49": {
        "name": "如果到家距离小于5km，则为我用百度地图叫一辆车去回家",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "当前位置",
                    "endLocation": "家",
                    "routeType": "Walking"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": "<",
                    "numberValue": "5000"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "input": "百度地图",
                    "pickupLocation": "当前位置",
                    "dropOffLocation": "家",
                    "partySize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.GetDistance(startLocation=当前位置,endLocation=家,routeType=Walking),condition=<,numberValue=5000))\nNestCommand(phone.actions.RequestRide(input=百度地图,pickupLocation=当前位置,dropOffLocation=家,partySize=1))"
    },
    "50": {
        "name": "获取照片库最近的1张gif图片，并将照片拆分为单独的帧",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastPhoto",
                "params": {
                    "numberofPhotos": "1",
                    "includeScreenshots": "false"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.GetFramesFromImage",
                "params": {
                    "image": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.GetFramesFromImage(image=phone.actions.GetLastPhoto(numberofPhotos=1,includeScreenshots=false)))"
    },
    "51": {
        "name": "当到学校时向家人发消息报平安",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "学校"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendMessage",
                "params": {
                    "showWhenRun": "true",
                    "recipients": "家人",
                    "message": "我已经到学校了"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location='学校'))\nSeqCommand(phone.actions.SendMessage(showWhenRun=true,recipients='家人',message='我已经到学校了'))"
    },
    "52": {
        "name": "如果现在外面在下大雨，则随机播放歌曲，否则导航到附近火锅店",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsWeatherCondition",
                "params": {
                    "input": "天气状况",
                    "condition": "下雨"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "DefaultToFirstAlbum",
                    "mode": "shuffle"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "火锅店",
                    "mode": "Driving"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsWeatherCondition(input='天气状况',condition='下雨'))\nSeqCommand(phone.actions.PlayMusic(music='DefaultToFirstAlbum',mode='shuffle'))\nElseCommand\nSeqCommand(phone.actions.GetDirections(source='DefaultToCurrentLocation',destination='火锅店',mode='Driving'))"
    },
    "53": {
        "name": "如果温度超过30℃，则为我用腾讯地图叫一辆车去学校",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "humidity"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:1",
                    "condition": ">",
                    "numberValue": "30"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "腾讯地图",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropOffLocation": "学校",
                    "rideType": "commonRide",
                    "partySize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(NestCommand(phone.actions.Conditional(input=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='DefaultToCurrentLocation',type='Daily'),info='humidity'),condition='>',numberValue='30')))\nSeqCommand(phone.actions.RequestRide(app='腾讯地图',pickupLocation='DefaultToCurrentLocation',dropOffLocation='学校',rideType='commonRide',partySize=1))"
    },
    "54": {
        "name": "获取昆明天气，如果最低温度低于10℃，则发消息邀请朋友吃火锅",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "昆明",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "humidity"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:1",
                    "condition": "<",
                    "numberValue": "10"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SendMessage",
                "params": {
                    "showWhenRun": "true",
                    "recipients": "朋友",
                    "message": "一起吃火锅"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='昆明',type='Daily'),info='humidity'),condition='<',numberValue='10'))\nSeqCommand(phone.actions.SendMessage(showWhenRun=true,recipients='朋友',message='一起吃火锅'))"
    },
    "55": {
        "name": "如果当前打开了阅读软件，则关闭蓝牙，然后打开飞行模式",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsApplication",
                "params": {
                    "application": "阅读软件",
                    "applicationState": "open"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetBlueTooth",
                "params": {
                    "blueToothmodeState": "open"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.SetAirplaneMode",
                "params": {
                    "airplaneModeState": "open"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsApplication(application='阅读软件',applicationState='open'))\nSeqCommand(phone.actions.SetBlueTooth(blueToothmodeState='open'),phone.actions.SetAirplaneMode(airplaneModeState='open'))"
    },
    "56": {
        "name": "如果在13点，则将打开播客，搜索美国的泰勒",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "specificTime": "13"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "播客"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.SearchPodcasts",
                "params": {
                    "search": "泰勒",
                    "searchBy": "全部",
                    "country": "美国"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(specificTime='13'))\nSeqCommand(phone.actions.OpenApp(appName='播客'),phone.actions.SearchPodcasts(search='泰勒',searchBy='全部',country='美国'))"
    },
    "57": {
        "name": "当到达地铁站时,打开微信乘车码",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "地铁站"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "微信"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location='地铁站'))\nSeqCommand(phone.actions.OpenApp(appName='微信'))"
    },
    "58": {
        "name": "当离自己家3km的时候，向父母邮箱发送消息“我快到家了”",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "家",
                    "routeType": "Direct",
                    "unit": "km"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": "等于",
                    "numberValue": "3"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "父母",
                    "message": "我快到家了"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.GetDistance(startLocation='DefaultToCurrentLocation',endLocation='家',routeType='Direct',unit='km'),condition='=',numberValue=3))\nSeqCommand(phone.actions.SendEmail(from='DefaultToCurrentSender', to='父母',message='我快到家了'))"
    },
    "59": {
        "name": "获取本地天气信息，如果降水概率超过50%则将今天就要下雨了添加到音乐播放",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "precipitationProb"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "condition": ">",
                    "numberValue": "50%"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "DefaultPlaylist",
                    "music": "今天就要下雨了"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(condition=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='DefaultToCurrentLocation',type='Daily'),info='precipitationProb'), condition='>', numberValue=50%))\nSeqCommand(phone.actions.AddToPlaylist(playlist='DefaultPlaylist', music='今天就要下雨了'))"
    },
    "60": {
        "name": "当电量低于5%时打开飞行模式",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.GetBatteryCapacity",
                "params": {
                    "batteryLevel": "小于",
                    "batteryValue": "5%"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetAirplaneMode",
                "params": {
                    "airplaneModeState": "open"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.GetBatteryCapacity(batteryLevel='小于',batteryValue=5%))\nSeqCommand(phone.actions.SetAirplaneMode(airplaneModeState='open'))"
    },
    "61": {
        "name": "当手机电量低于20%，则为我在方圆5km内找一家超市",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.GetBatteryCapacity",
                "params": {
                    "batteryLevel": "小于",
                    "batteryValue": "20%"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SearchLocalFacilities",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "query": "超市",
                    "radius": "5000"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.GetBatteryCapacity(batteryLevel='小于',batteryValue=20%))\nSeqCommand(phone.actions.SearchLocalFacilities(source='DefaultToCurrentLocation',query='超市',radius='5000'))"
    },
    "62": {
        "name": "连接上WiFi，则打开应用商店更新软件",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsNetwork",
                "params": {
                    "network": "DefaultAny"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "应用商店"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsNetwork(network='DefaultAny'))\nSeqCommand(phone.actions.OpenApp(appName='应用商店'))"
    },
    "63": {
        "name": "如果到学校的直线距离大于3km，则显示到学校的公交地铁导航路线",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "学校",
                    "routeType": "Direct",
                    "unit": "km"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": ">",
                    "numberValue": "3"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "学校",
                    "mode": "PublicTrans"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.GetDistance(startLocation='DefaultToCurrentLocation',endLocation='学校',routeType='Direct',unit='km'),condition='>',numberValue=3))\nSeqCommand(phone.actions.GetDirections(source='DefaultToCurrentLocation',destination='学校',mode='PublicTrans'))"
    },
    "64": {
        "name": "如果在夜间则将飞行模式打开",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "夜间"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetAirplaneMode",
                "params": {
                    "airplaneModeState": "open"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state='夜间'))\nSeqCommand(phone.actions.SetAirplaneMode(airplaneModeState='open'))"
    },
    "65": {
        "name": "如果到电影院距离超过5km，则为我用高德地图叫一辆车去电影院",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "电影院",
                    "routeType": "Direct",
                    "unit": "km"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": ">",
                    "numberValue": "5"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "高德地图",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropOffLocation": "电影院",
                    "rideType": "commonRide",
                    "partySize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.GetDistance(startLocation='DefaultToCurrentLocation',endLocation='电影院',routeType='Direct',unit='km'),condition='>',numberValue=5))\nSeqCommand(phone.actions.RequestRide(app='高德地图',pickupLocation='DefaultToCurrentLocation',dropOffLocation='电影院',rideType='commonRide',partySize=1))"
    },
    "66": {
        "name": "如果到降水概率超过50%，则为我用高德地图叫一辆车去公司",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "precipitationProb"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "condition": ">",
                    "numberValue": "50%"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "高德地图",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropOffLocation": "公司",
                    "rideType": "commonRide",
                    "partySize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(condition=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='DefaultToCurrentLocation',type='Daily'),info='precipitationProb'), condition='>', numberValue=50%))\nSeqCommand(phone.actions.RequestRide(app='高德地图',pickupLocation='DefaultToCurrentLocation',dropOffLocation='公司',rideType='commonRide',partySize=1))"
    },
    "67": {
        "name": "获取上海天气，如果降雨概率超过50%发消息提醒上海的父亲记得带伞",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "上海",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "precipitationProb"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "condition": ">",
                    "numberValue": "50%"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SendMessage",
                "params": {
                    "showWhenRun": "true",
                    "recipients": "父亲",
                    "message": "记得带伞"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(condition=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='上海',type='Daily'),info='precipitationProb'), condition='>', numberValue=50%))\nSeqCommand(phone.actions.SendMessage(showWhenRun=true,recipients='父亲',message='记得带伞'))"
    },
    "68": {
        "name": "当到家时向朋友发消息报平安",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "家"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendMessage",
                "params": {
                    "showWhenRun": "true",
                    "recipients": "朋友",
                    "message": "平安到家"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location='家'))\nSeqCommand(phone.actions.SendMessage(showWhenRun=true,recipients='朋友',message='平安到家'))"
    },
    "69": {
        "name": "如果当前app是音乐app，则打开手机蓝牙，以供与蓝牙耳机连接",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsApplication",
                "params": {
                    "application": "音乐",
                    "applicationState": "open"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetBlueTooth",
                "params": {
                    "blueToothmodeState": "open"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsApplication(application='音乐',applicationState='open'))\nSeqCommand(phone.actions.SetBlueTooth(blueToothmodeState='open'))"
    },
    "70": {
        "name": "如果收到邮件，则向发送方发送应答消息（已收到)",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Email",
                "params": {
                    "From": "DefaultAny"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "DefaultToCurrentSender",
                    "to": "DefaultLastSender",
                    "message": "已收到"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Email(From='DefaultAny'))\nSeqCommand(phone.actions.SendEmail(from='DefaultToCurrentSender', to='DefaultLastSender',message='已收到'))"
    },
    "71": {
        "name": "如果体感温度低于0度，则为我在方圆10km内找一家火锅店",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:0",
                    "info": "bodyTmp"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "condition": "<",
                    "numberValue": "0"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SearchLocalFacilities",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "query": "火锅店",
                    "radius": "10000"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(condition=phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='DefaultToCurrentLocation',type='Daily'),info='bodyTmp'), condition='<', numberValue=0))\nSeqCommand(phone.actions.SearchLocalFacilities(source='DefaultToCurrentLocation',query='火锅店',radius='10000'))"
    },
    "72": {
        "name": "如果到餐厅的直线距离小于5km，则显示到餐厅的步行导航路线，否则显示驾车导航路线",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "餐厅",
                    "routeType": "Direct",
                    "unit": "km"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Conditional",
                "params": {
                    "input": "ActionOutput:0",
                    "condition": "<",
                    "numberValue": "5"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "餐厅",
                    "mode": "Walking"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "DefaultToCurrentLocation",
                    "destination": "餐厅",
                    "mode": "Driving"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.actions.Conditional(input=phone.actions.GetDistance(startLocation='DefaultToCurrentLocation',endLocation='餐厅',routeType='Direct',unit='km'),condition='<',numberValue=5))\nSeqCommand(phone.actions.GetDirections(source='DefaultToCurrentLocation',destination='餐厅',mode='Walking'))\nElseCommand\nSeqCommand(phone.actions.GetDirections(source='DefaultToCurrentLocation',destination='餐厅',mode='Driving'))"
    },
    "73": {
        "name": "上了飞机自动打开飞行模式",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "飞机"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetAirplaneMode",
                "params": {
                    "airplaneModeState": "open"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location='飞机'))\nSeqCommand(phone.actions.SetAirplaneMode(airplaneModeState='open'))"
    },
    "74": {
        "name": "下了飞机自动关闭飞行模式",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Leave",
                "params": {
                    "location": "飞机"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SetAirplaneMode",
                "params": {
                    "airplaneModeState": "close"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Leave(location='飞机'))\nSeqCommand(phone.actions.SetAirplaneMode(airplaneModeState='close'))"
    },
    "75": {
        "name": "每隔一个小时,返回一次当前位置的紫外线指数,循环24次",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "count": "24"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "3600"
                }
            },
            {
                "action_id": 2,
                "action_name": "phone.actions.WeatherForecast",
                "params": {
                    "location": "DefaultToCurrentLocation",
                    "type": "Daily"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:2",
                    "info": "UVI"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(count=24))\nSeqCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherForecast(location='DefaultToCurrentLocation',type='Daily'),info='UVI'), phone.actions.Delay(numberOfSeconds=3600))"
    },
    "76": {
        "name": "将相册中最新的10张照片制作成gif",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastPhoto",
                "params": {
                    "number": "10",
                    "includeScreenshots": "false"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.MakeGif",
                "params": {
                    "content": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.MakeGif(content=phone.actions.GetLastPhoto(number=10,includeScreenshots=false)))"
    },
    "77": {
        "name": "计算((1+100)*100)/2的结果",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.CalculateExpression",
                "params": {
                    "input": "((1+100)*100)/2"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.CalculateExpression(input=\"((1+100)*100)/2\"))"
    },
    "78": {
        "name": "计算1*2*3的结果",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.CalculateExpression",
                "params": {
                    "input": "1*2*3"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.CalculateExpression(input=\"1*2*3\"))"
    },
    "79": {
        "name": "每隔半个小时,返回一次当前位置并发送给父母",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "24"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "1800"
                }
            },
            {
                "action_id": 2,
                "action_name": "phone.actions.GetCurrentLocation",
                "params": {
                    "precision": "最佳"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SendEmail",
                "params": {
                    "from": "当前账号",
                    "to": "父母",
                    "message": "ActionOutput:2"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=24))\nSeqCommand(phone.actions.SendEmail(from=\"当前账号\",to=\"父母\",message=phone.actions.GetCurrentLocation(precision=\"最佳\")),phone.actions.Delay(numberOfSeconds=1800))"
    },
    "80": {
        "name": "每隔10分钟,检查电量是否小于10%，如果是则关闭蓝牙",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.RepeatCount",
                "params": {
                    "repeatCount": "24"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.Delay",
                "params": {
                    "numberOfSeconds": "600"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.scenes.GetBatteryCapacity",
                "params": {
                    "batteryLevel": "小于",
                    "batteryValue": "10%"
                }
            },
            {
                "acrion_id": 3,
                "action_name": "phone.actions.SetBlueTooth",
                "params": {
                    "blueToothmodeState": "close"
                }
            }
        ],
        "type": "循环",
        "result": "LoopCommand(phone.actions.RepeatCount(repeatCount=24))\nIfCommand(phone.scenes.GetBatteryCapacity(batteryLevel=\"小于\",batteryValue=\"10%\"))\nSeqCommand(phone.actions.SetBlueTooth(blueToothmodeState=\"close\"),phone.actions.Delay(numberOfSeconds=600))"
    },
    "81": {
        "name": "为我在本周设定每天早上7点的闹钟，下一周不重复",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.CreateAlarm",
                "params": {
                    "time": "早上7点",
                    "repeat": "Week"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.CreateAlarm(time='早上7点', repeat='Week'))"
    },
    "82": {
        "name": "在本周每天早上返回今天的天气信息",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "早上",
                    "repeat": "Week"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.WeatherCurrentConditions",
                "params": {
                    "location": "DefaultToCurrentLocation"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state='早上', repeat='Week'))\nSeqCommand(phone.actions.WeatherCurrentConditions(location='DefaultToCurrentLocation'))"
    },
    "83": {
        "name": "这个月每天早上返回今天的体感温度用来决定衣着",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "早上",
                    "repeat": "Month"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.WeatherCurrentConditions",
                "params": {
                    "location": "DefaultToCurrentLocation"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.WeatherConditions",
                "params": {
                    "weatherConditions": "ActionOutput:1",
                    "info": "bodyTmp"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state='早上', repeat='Month'))\nNestCommand(phone.actions.WeatherConditions(weatherConditions=phone.actions.WeatherCurrentConditions(location='DefaultToCurrentLocation'), info='bodyTmp'))"
    },
    "84": {
        "name": "每天早上起床后播放我的轻音乐播放列表",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "早上"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.GetPlaylist",
                "params": {
                    "playlist": "轻音乐"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "ActionOutput:1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state='早上'))\nNestCommand(phone.actions.PlayMusic(music=phone.actions.GetPlaylist(playlist='轻音乐')))"
    },
    "85": {
        "name": "获取最新的视频并制作gif",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetLastVideo",
                "params": {
                    "numberOfVideos": "1"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.MakeGif",
                "params": {
                    "secondsPerPhoto": "0.2",
                    "loopForever": "True",
                    "autoSize": "True",
                    "content": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.MakeGif(secondsPerPhoto=0.2,loopForever=True,autoSize=True,content=phone.actions.GetLastVideo(numberOfVideos=1)))"
    },
    "86": {
        "name": "到了自习室自动打开QQ音乐",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "自习室"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "QQ音乐"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location=\"自习室\")\nSeqCommand(phone.actions.OpenApp(appName=\"QQ音乐\"))"
    },
    "87": {
        "name": "如果处于充电状态则打开充电状态监测应用",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsCharge",
                "params": {
                    "ChargeState": "Yes"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "充电状态监测应用"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsCharge(ChargeState=\"Yes\"))\nSeqCommand(phone.actions.OpenApp(appName=\"充电状态监测应用\"))"
    },
    "88": {
        "name": "如果收到导师的邮件立刻打开网易邮箱",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Email",
                "params": {
                    "from": "导师",
                    "to": "DefaultToSender"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "网易邮箱"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Email(from=\"导师\",to=\"DefaultToSender\"))\nSeqCommand(phone.actions.OpenApp(appName=\"网易邮箱\"))"
    },
    "89": {
        "name": "上网搜索正在播放的歌曲的详细信息",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SearchWeb(text=phone.actions.GetCurrentSong()))"
    },
    "90": {
        "name": "上网搜索PDF中文本的意思",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetTextFromPdf",
                "params": {
                    "pdf": "LastOpenedFile"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SearchWeb(text=phone.actions.GetTextFromPdf(pdf=\"LastOpenedFile\")))"
    },
    "91": {
        "name": "将剪贴板文本放到备忘录",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.AddToMemorandum",
                "params": {
                    "text": "clipboardText",
                    "memora": "DefaultFirst"
                }
            }
        ],
        "type": "顺序",
        "result": "SeqCommand(phone.actions.AddToMemorandum(text='clipboardText', memora='DefaultFirst'))"
    },
    "92": {
        "name": "上网搜索扫码的结果",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.ScanCode",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.SearchWeb",
                "params": {
                    "text": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.SearchWeb(text=phone.actions.ScanCode()))"
    },
    "93": {
        "name": "将当前播放的歌曲加入我的歌单",
        "actions": [
            {
                "action_id": 0,
                "action_name": "phone.actions.GetCurrentSong",
                "params": {}
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.AddToPlaylist",
                "params": {
                    "playlist": "我的歌单",
                    "music": "ActionOutput:0"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.AddToPlaylist(playlist=\"我的歌单\",music=phone.actions.GetCurrentSong()))"
    },
    "94": {
        "name": "当启动CarPlay车机时，立刻导航到公司",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.CarPlay",
                "params": {
                    "carPlayState": "open"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.GetDirections",
                "params": {
                    "source": "当前位置",
                    "destination": "目的地",
                    "mode": "Driving"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.CarPlay(carPlayState='open'))\nSeqCommand(phone.actions.GetDirections(source=\"DefaultToCurrentLocation\",destination=\"公司\",mode=\"Driving\"))"
    },
    "95": {
        "name": "5点下班时为我用高德地图叫一辆回家车",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "specificTime": "5点"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.RequestRide",
                "params": {
                    "app": "高德地图",
                    "pickupLocation": "DefaultToCurrentLocation",
                    "dropOffLocation": "家",
                    "partSize": "1"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(specificTime=\"5点\"))\nSeqCommand(phone.actions.RequestRide(app=\"高德地图\",pickupLocation=\"DefaultToCurrentLocation\",dropOffLocation=\"家\",partSize=1))"
    },
    "96": {
        "name": "中午时为我打开美团外卖",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "中午"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "美团外卖"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state=\"中午\"))\nSeqCommand(phone.actions.OpenApp(appName=\"美团外卖\"))"
    },
    "97": {
        "name": "周日晚上为我设定周一早上7点的闹钟",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.IsTime",
                "params": {
                    "state": "周日晚上"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.CreateAlarm",
                "params": {
                    "time": "周一早上7点",
                    "repeat": "Never"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.IsTime(state=\"周日晚上\"))\nSeqCommand(phone.actions.CreateAlarm(time=\"周一早上7点\",repeat=\"Never\"))"
    },
    "98": {
        "name": "到公司时打开钉钉扫码打卡",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "公司"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "钉钉"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location=\"公司\"))\nSeqCommand(phone.actions.OpenApp(appName=\"钉钉\"))"
    },
    "99": {
        "name": "告诉我开车去公司多远，并记到备忘录中",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "公司",
                    "routeType": "Driving"
                }
            },
            {
                "action_id": 1,
                "action_name": "phone.actions.GetDistance",
                "params": {
                    "startLocation": "DefaultToCurrentLocation",
                    "endLocation": "公司",
                    "routeType": "Driving"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.AddToMemorandum",
                "params": {
                    "text": "ActionOutput:1",
                    "memora": "DefaultFirst"
                }
            }
        ],
        "type": "嵌套",
        "result": "NestCommand(phone.actions.GetDistance(startLocation=\"DefaultToCurrentLocation\",endLocation=\"公司\",routeType=\"Driving\"), phone.actions.AddToMemorandum(text=phone.actions.GetDistance(startLocation=\"DefaultToCurrentLocation\",endLocation=\"公司\",routeType=\"Driving\"), memora='DefaultFirst'))"
    },
    "100": {
        "name": "到操场时自动打开keep准备运动并开始播放音乐",
        "actions": [
            {
                "acrion_id": 0,
                "action_name": "phone.scenes.Arrive",
                "params": {
                    "location": "操场"
                }
            },
            {
                "acrion_id": 1,
                "action_name": "phone.actions.OpenApp",
                "params": {
                    "appName": "keep"
                }
            },
            {
                "acrion_id": 2,
                "action_name": "phone.actions.PlayMusic",
                "params": {
                    "music": "DefaultToFirstAlbum",
                    "mode": "recommend"
                }
            }
        ],
        "type": "条件",
        "result": "IfCommand(phone.scenes.Arrive(location=\"操场\"))\nSeqCommand(phone.actions.OpenApp(appName=\"keep\"),phone.actions.PlayMusic(music=\"DefaultToFirstAlbum\",mode=\"recommend\"))"
    }
}